name: Deploy to Docker Hub and EC2

on:
  push:
    branches:
      - main   # runs automatically on push to main
  workflow_dispatch: # also allow manual trigger

jobs:
  build:
    name: Build and Push Docker Image with GitHub Actions
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub using token
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Build and push Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Save SSH key
        run: |
          echo "${{ secrets.SSHKEY }}" > prod-cn-website.pem
          chmod 600 prod-cn-website.pem

      - name: SSH into EC2 and deploy container
        run: |
          ssh -o StrictHostKeyChecking=no -i "prod-cn-website.pem" ubuntu@ec2-13-200-2-193.ap-south-1.compute.amazonaws.com << 'EOF'
            # Log in to Docker Hub using token
            echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          
            # Stop and remove old container
            docker stop prod-cn-website || true
            docker rm prod-cn-website || true
          
            # Pull latest image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/prod-cn-website:latest
          
            # Run new container (map port 8080 on host to port 80 in container)
            docker run -d --name prod-cn-website -p 8080:80 ${{ secrets.DOCKERHUB_USERNAME }}/prod-cn-website:latest
          
            # Cleanup old images
            docker image prune -f
          EOF
